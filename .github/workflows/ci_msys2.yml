name: MSYS2 CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    env:
      PYTHONIOENCODING: "utf-8"

jobs:
  name: MSYS2 - ${{matrix.arch}}
  runs-on: windows-latest
  strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            msystem: mingw64
          - arch: i686
            msystem: mingw32
  defaults:
    run:
      shell: msys2 {0}

  steps:
    - name: Checkout the source
      uses: actions/checkout@v2
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true
        path-type: inherit
        install: >-
          base-devel
          git
          autoconf
          automake
          libtool
          mingw-w64-${{ matrix.arch }}-toolchain
          mingw-w64-${{ matrix.arch }}-zlib
          mingw-w64-${{ matrix.arch }}-python3
          mingw-w64-${{ matrix.arch }}-python3-pip
          mingw-w64-${{ matrix.arch }}-meson
          mingw-w64-${{ matrix.arch }}-ninja
          mingw-w64-${{ matrix.arch }}-cmake
          mingw-w64-${{ matrix.arch }}-zlib
    - name: Autotools configure
      run: |
        autoreconf -vif
        ./configure  \
          --disable-static \
          --enable-shared \
          --host=${{ matrix.arch }}-w64-mingw32
    - name: Autotools build
      run: |
        make -j
    - name: Autotools tests
      run: |
        make -j check
    - name: Autotools distcheck
      run: |
        make -j distcheck DISTCHECK_CONFIGURE_FLAGS="--disable-static --enable-shared --host=${{ matrix.arch }}-w64-mingw32"
    - name: Meson configure
      run: |
        pip3 install --upgrade pip
        pip3 install meson --user
        mkdir build_meson
        cd build_meson
        meson .. -Ddwarfexample=true
    -name: Meson build
      run: |
        ninja
    -name: Meson tests
      run: |
        ninja test
    - name: CMake configure
      run: |
        mkdir build_cmake
        cd build_cmake
        cmake \
          -DDO_TESTING=ON \
          -DBUILD_DWARFEXAMPLE=ON \
          -DBUILD_SHARED:BOOL=TRUE \
          -DBUILD_NON_SHARED:BOOL=FALSE \
          -DDWARF_WITH_LIBELF:BOOL=FALSE \
          -G "Unix Makefiles" \
          ../CMakeLists.txt
    -name: Cmake build
      run: |
        make -j
    -name: Cmake tests
      run: |
        ctest -R self
